
   ____ ___  ___  ____ ___  ____  _______  __
  / __ `__ \/ _ \/ __ `__ \/ __ \/ ___/ / / /
 / / / / / /  __/ / / / / / /_/ / /  / /_/ /
/_/ /_/ /_/\___/_/ /_/ /_/\____/_/   \__, /
   ____ ___  ____ _____  ____ _____ ////_/_____
  / __ `__ \/ __ `/ __ \/ __ `/ __ `/ _ \/ ___/
 / / / / / / /_/ / / / / /_/ / /_/ /  __/ /
/_/ /_/ /_/\__,_/_/ /_/\__,_/\__, /\___/_/
                            /____/

=== Authors ===

- Jean Claude Zarate <jzarate@wpi.edu>
- James Jay Scherick <jjscherick@wpi.edu>

=== Project Structures ===

The following files are a part of the project:

- main.c (contains the source code for the memory manager program)
- Makefile (used to compile memory manager)
- memory-manager (WILL BE COMPILED BY END USER, NOT DISTRIBUTED)
- The contents of test-inputs
- The contents of test-ouputs

=== Compiling ===

There is an included makefile. To compile the memory-manager executable, run:

$ make

To delete the generated files, run

$ make clean

NOTICE:

Compiling into a 32 bit executable is being forced with the -m32 flag in the make file. This is to simulate the environment of the virtual machine if compiling outside the classroom VM. Of course, this program is still being tested on the classroom VM.

=== Running ===

In order to run the executable, run

$ ./memory-manager

=== Features & Limitations ===

- User input may be a max of 99 characters per request for instructions (this will fail silently)
- If EOF (End Of File) is detected while obtaining input, the program will finish running.

=== Tests ===

There are two folders included with the distribution of this project. test-inputs and test-outputs. 1.txt in test-inputs corresponds with 1.txt in test-outputs.

To pipe the test-inputs file into memory manager, run something like

$ ./memory-manager < test-inputs/1.txt

=== Credits ===

- ASCII Art in the README generated by http://patorjk.com/software/taag
